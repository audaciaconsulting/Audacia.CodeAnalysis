name: $(Year:yy)$(DayOfYear).$(rev:r)
trigger:
  branches:
    include: [master]
  paths:
    include:
      - 'dotnet-roslyn/analyzers/Audacia.CodeAnalysis.Analyzers.Helpers/*'
pr:  
  branches:
    include: [master]
  paths:
    include:
      - 'dotnet-roslyn/analyzers/Audacia.CodeAnalysis.Analyzers.Helpers/*'
resources: { repositories: [ { repository: templates, type: git, name: Audacia/Audacia.Build } ] }
pool: { vmImage: windows-latest }

stages:
- stage: Build
  displayName: Build
  jobs:
    - template: src/build/dotnet/jobs/nuget-package.job.yaml@templates
      parameters:
        projects: 'dotnet-roslyn/analyzers/Audacia.CodeAnalysis.Analyzers.Helpers/src/Audacia.CodeAnalysis.Analyzers.Helpers/Audacia.CodeAnalysis.Analyzers.Helpers.csproj'
        # No tests so pass the main library csproj to stop other test projects in the repo being used
        tests: 'dotnet-roslyn/analyzers/Audacia.CodeAnalysis.Analyzers.Helpers/src/Audacia.CodeAnalysis.Analyzers.Helpers/Audacia.CodeAnalysis.Analyzers.Helpers.csproj'

- stage: Release
  displayName: Release
  jobs: [ { template: src/deployment/nuget/jobs/internal-public-nuget-package.job.yaml@templates } ]
  condition: and(succeeded(), and(not(eq(variables['Build.Reason'], 'PullRequest')), not(eq(variables['Build.Reason'], 'Schedule'))))